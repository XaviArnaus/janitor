###########################
#         Janitor         #
###########################

# App Info
app:
  # Server and Client configuration
  service:
    # Configuration for the Server side
    listen:
      # [String] IP to listen to.
      #   Set 127.0.0.1 to only listen to localhost, which is the most secure
      #   Set 0.0.0.0 to have the server available externally as well
      host: 0.0.0.0
      # [String] Port to listen to.
      port: 5000
    # [String] URL (and maybe port) to send the POST request to.
    remote_url: http://localhost:5000
  # Control of the app runners
  run_control:
    # [Bool] Performs a dry run: the queue is untouched and no re-toot is really done
    # Check the logs/stdout to see the results
    dry_run: True
  # Manage the scheduling.
  # Will be read by the scheduler (running every minute) to know what to do
  schedules:
    - name: "Heartbeat"
      # crontab format: minute hour day-of-month month day-of-week
      when: "* * * * *"
      # [String] possible values: "sysinfo_local" | "sysinfo_remote"
      action: "sysinfo_local"

# Directnic's Dynamic DNS updater
directnic_ddns:
  # [String] Where to store it
  file: "storage/directnic_ddns.yaml"
  # [List] Items to update
  updates:
    - https://directnic.com/dns/gateway/abcdefg123456/?data=
    - https://directnic.com/dns/gateway/987654abcdef5/?data=

# Sysntem Information config
system_info:
  # Levels above (greater than) which an alarm should be triggered
  # Make the name of the parameter equal to any of the metric names in SystemInfo
  thresholds:
    cpu_percent:
      # [Float] CPU percent
      value: 80.0
      # [String] MessageType in case of crossing: "none" | "info" | "warning" | "error" | "alarm"
      message_type: "warning"
    memory_percent:
      # [Float] Memory percent
      value: 80.0
      # [String] MessageType in case of crossing: "none" | "info" | "warning" | "error" | "alarm"
      message_type: "warning"
    disk_usage_percent:
      # [Float] Disk percent
      value: 80.0
      # [String] MessageType in case of crossing: "none" | "info" | "warning" | "error" | "alarm"
      message_type: "alarm"

# Formatting configs
formatting:
  # Related to the SystemInfo
  system_info:
    # A string that will be used to display the metric itself
    report_item_names_map:
      cpu_percent: "CPU %"
      cpu_count: "CPU count"
      memory_total: "Memory Total"
      memory_avail: "Memory Available"
      memory_used: "Memory Used"
      memory_free: "Memory Free"
      memory_percent: "Memory %"
      disk_usage_total: "Disk Total"
      disk_usage_used: "Disk Used"
      disk_usage_free: "Disk Free"
      disk_usage_percent: "Disk %"
    # [Bool] Making (or not) values human readable
    human_readable: True
    # [List[str]] List of metric names that won't apply the human_readable
    human_readable_exceptions: ["cpu_percent", "cpu_count", "memory_percent", "disk_usage_percent"]

# Configuration regarding the connection with Mastodon API
mastodon:
   # [String] This will be the name of the bot
  app_name: "Janitor"
  # [String] Where to connecto to deliver the statuses
  api_base_url: "https://mastodon.social"
  # [String] Type of instance: 
  #   "mastodon" for Mastodon
  #   "pleroma" for Pleroma / Akkoma
  #   "firefish" for Firefish / Calckey
  instance_type: "pleroma"
  # Credentials files to be generated
  credentials:
    # [String] Generated when creating the app. Contains Client ID and Client Secret
    client_file: "client.secret"
    # [String] Generated at first login. Contains the User Secret to be reused in further runs.
    user_file: "user.secret"
    # The User credentials. Used only during the first run.
    # Should be Ok to delete the values once we have the "user.secret" generated
    user:
      # [String] email to be used to log in. For instance_type "firefish" it is ignored.
      email: "bot+janitor@my-fancy.site"
      # [String] Password to be used to log in. For instance_type "firefish" it is the Bearer token.
      password: "SuperSecureP4ss"
  # Configuration regarding the Status Post itself
  status_post:
    # [Integer] Status max length
    max_length: 500
    # [String] Status Post content type: "text/plain" | "text/markdown" | "text/html" | "text/bbcode"
    # Only vaild for Pleroma and Akkoma instances. Mastodon instances will ignore it
    content_type: "text/markdown"
    # [String] Status Post visibility: "direct" | "private" | "unlisted" | "public"
    visibility: "public"
    # [String] Username to mention for "direct" visibility 
    username_to_dm: "@admin"

# Logging config
logger:
  # [Integer] Log level: NOTSET=0 | DEBUG=10 | INFO=20 | WARN=30 | ERROR=40 | CRITICAL=50
  loglevel: 10
  # [String] Name of the logger
  name: "janitor"
  # [Bool] Dump the log into a file
  to_file: True
  # [String] Path and filename of the log file
  filename: "log/janitor.log"
  # [Bool] Dump the log into a stdout
  to_stdout: True
  # [String] Format of the log
  format: "[%(asctime)s] %(levelname)-8s %(name)-12s %(message)s"

# Storage for the toots queue registry
queue_storage:
  # [String] Where to store it
  file: "storage/queue.yaml"

publisher:
# [String] Where to download the media to
  media_storage: "storage/media/"